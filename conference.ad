:allow-uri-read:
:author: Charles Moulliard
:backend: revealjs
:blog: http://cmoulliard.github.io
:icons: font
:idprefix:
:imagesdir: images/
:linkattrs:
:linkcss:
:project_dir: /Users/chmoulli/MyProjects/conferences/devnation-2014-slideshow
:resourcesdir: /Users/chmoulli/MyProjects/conferences/devnation-2014-slideshow/snippet/src/main/resources
// Themes : default, beige, moon, blood, night, serif, simple, sky, solarized
:revealjs_theme: conference-wjax
:revealjs_vertical_alignment: false
:revealjs_history: true
:source-highlighter: highlightjs
//:source-highlighter: coderay, highlightjs, pygments
:stylesdir: /Users/chmoulli/RedHat/GPE/content/hyla/resources/styles
:title-author: {title} {author}
:title-speaker: Architect Engineer Committer
:twitter: cmoulliard

// ************* INTRO ***************
[data-background="images/wjax_intro.png", data-state="intro"]
== .

[.paragraph-bottom]
http://twitter.com/{twitter}[+++<h4>+++{author} | RedHat] +
Architect, Engineer & Committer +++</h4>+++ +
+++<h3>+++ Integration Services @Works with Fuse Technology +++</h3>+++

// ************ SPEAKER **************
[data-background="images/wjax_bgrd2.png"]
== Speaker

* Agronomist & Zoologist
** 20 years of experience in IT world development
** Project manager in Bank, Financial, Telco world
* Specialized in new technologies Web & Integration
* **Architect/Engineer** @Red Hat

[.newline]
* **Committer** : Apache ServiceMix, Karaf (PMC), Camel (PMC), Fabric8, Drools, Hawtio, Asciidoctor

image::camel/my-camel.jpg[180,180,float="right"]

// *************** SPEAKER cont *************
[data-background="images/wjax_bgrd2.png"]
== Speaker - con't

[cols=".^5,.^95"]
|===
|image:it/twitter_logo_blue2.png[35,35,vertical-align="top"]|Twitter : http://twitter.com/cmoulliard
|image:it/linkedin.png[35,35]|LinkedIn : http://www.linkedin.com/in/charlesmoulliard
|image:it/github.jpg[35,35]|Blog : http://cmoulliard.github.io
|image:it/slideshare.png[35,35]|Slideshare : http://www.slideshare.net/cmoulliard
|===

// *************** WHERE I LIVE ************
[data-background="images/wjax_bgrd2.png"]
== Country where I live

|===
|image:belgium1.jpeg[] | image:atomium.jpeg[width="75%] |image:manneken.jpeg[]
|image:brussels.jpg[width="85%"]| image:brugge.jpg[width="85%",height="85%"] |
|===

// *************** ABOUT BELGIUM ************
[data-background="images/wjax_bgrd2.png"]
== What you should know about Belgium

image::frits.jpeg[float="left"]
image::chocolate.jpeg[float="left"]
image::beers.jpeg[float="left"]
image::bande-dessinee.jpeg[float="left"]

// ************** MY PASSIONS **************
[data-background="images/wjax_bgrd2.png"]
== My Passion(s)

|===
| image:photography.jpeg[width="80%",height="80%"] | image:stumpjumper.jpeg[width="80%",height="80%"] |
| image:nature.jpeg[] | image:formula1.jpeg[] |
|===

// ************** MY PASSIONS **************
[data-background="images/wjax_bgrd2.png"]
== Agenda

[.fragment]
* Integration concepts

[.fragment]
* Bricks : Apache Camel, ActiveMQ, Karaf, CXF

[.fragment]
* New Integration challenges +

[.fragment]
* Internet Of Things

[.fragment]
* Integration everywhere (JVM, Machine, ...)

[.fragment]
* Fabric8: OS Integration Platform

[.fragment]
* Demo, ...

// ************ INTEGRATION CONCEPT 1 **************
[data-background="images/wjax_bgrd2.png"]
== Message

[.newline]
image::integration/message.png[]

[.newline]
[.fragment]
+++<i class="fa fa-arrow-right"></i>+++ Contains "MetaData" information as Header/Properties & "Payload" as Body

// ************ INTEGRATION CONCEPT 2 **************
[data-background="images/wjax_bgrd2.png"]
== Decoupling

[.newline]
image::integration/producer-consumer.png[width="17%"]

[.newline]
[.fragment]
+++<i class="fa fa-arrow-right"></i>+++ Client : Producer OR Consumer exchange *Message(s)*

// ************** INTEGRATION CONCEPT 3 **************
[data-background="images/wjax_bgrd2.png"]
== Messages transported -> BUS

|===
| .2+| image:integration/bus.png[width="95%",float="right"]
a|
[.newline]
+++<i class="fa fa-wrench"></i>+++ Is a Layer to transport *messages*

+++<i class="fa fa-arrow-right"></i>+++ Called Enterprise Service Bus |
|===

// ************** INTEGRATION FUNDAMENTALS ************
[data-background="images/wjax_bgrd2.png"]
== Integration bricks

[.newline]
* Messaging (JMS) / Transport : http://activemq.apache.org[ActiveMQ Broker]
* Routing / Mediation : http://camel.apache.org[Camel Integration framework]
* REST & Web Services : http://cxf.apache.org[Tooling CXF]
* Integration OSGI container : http://karaf.apache.org[Karaf]

// ************** CAMEL ************
[data-background="images/wjax_bgrd2.png"]
== Route, Mediate messages

image::camel/camel-box-small.png[width="100%",float="right"]

* OpenSource Java **Integration** Framework

[.newline]
* Designed around : **D**omain **S**pecific **L**anguage

[.newline]
* Implement **E**nterprise **I**ntegration **P**atterns

image::eip/book.jpg[width="45%",float="right"]

// ************** CAMEL ************
[data-background="images/wjax_bgrd2.png"]
== Apache Camel

* http://camel.apache.org/enterprise-integration-patterns.html[> 50 patterns] implemented & new : Loadbalancer, Throttler, Delayer, ...

image::eip/patterns.png[width="100%",float="left"]

// ************** CAMEL ************
[data-background="images/wjax_bgrd2.png"]
== Components

image::camel/components.png[width="70%"]

// ************** CAMEL ************
[data-background="images/wjax_bgrd2.png"]
== Transformations

image:camel/dataformat-2.png[]

// ************** CAMEL ************
[data-background="images/wjax_bgrd2.png"]
== Concepts

+++<i class="fa fa-arrow-right"></i>+++ Component, Endpoint, Consumer, Producer ... & Context

image::camel/factory.png[float="left"]

image::camel/camel-context.png[float="right"]

// ************** CAMEL ************
[data-background="images/wjax_bgrd2.png"]
== How it works

+++<i class="fa fa-arrow-right"></i>+++ Route = Consumer + Processor(s) + Producer(s) + Inteceptor(s)

image:camel/pipeline.png[]

// ************** CAMEL ************
[data-background="images/wjax_bgrd2.png"]
== Example

[source,java]
----
from("cxf:WS?dataFormat="MESSAGE")
  .choice()
      .when().simple("${header.SOAPAction} == 'saveClient'}
          .beanRef("clientService","saveClient")
          .beanRef("clientService","createResponse")
      .otherwise()
          .beanRef("errorService","wrongSoapRequest");
----

image:camel/inout.png[width="50%"]

// ************** ACTIVEMQ ************
[data-background="images/wjax_bgrd2.png"]
== Middleware Broker

* +++<i class="fa fa-arrow-right"></i>+++ High performance, *reliable JMS* messaging fabric
* Supporting JMS, C, C++, .Net, Stomp, AMQP *clients*
* Providing : TCP/SSL/AMQP/MQTT/HTTPS/WebSocket ...

image:activemq/broker-architecture.png[width="60%"]

// ************** ACTIVEMQ ************
[data-background="images/wjax_bgrd2.png"]
== HA & Failover

+++<i class="fa fa-arrow-right"></i>+++ Brokers compete to acquire *lock* on FileSystem/DataBase
+++<i class="fa fa-arrow-right"></i>+++ Clients use failover protocol to switch

image:activemq/master-slave.png[width="60%"]

// ************** ACTIVEMQ ************
// [data-background="images/wjax_bgrd2.png"]
// == Network of Brokers
//
// * *Forward* messages
// * Loadbalancing, isolate brokers - security, ...
//
// image:activemq/network-of-broker.png[]
//

// ************** CLASSICAL TOPOLOGY  **************
[data-background="images/wjax_bgrd2.png"]
== Classical Topology

* Deployment done on "Enterprise Service Bus"
* Very centric approach, does not fit new challenges ...

image::integration/bus_application.png[width="50%"]

// ************** COMPLEX TOPOLOGY  **************
[data-background="images/wjax_bgrd2.png"]
== Business & IT Complexity

image::fuse/distributed_topology.png[width="%"]

// ************* NEW CHALLENGES ***********
[data-background="images/wjax_bgrd2.png"]
== New challenges

* Internet of Things, Integration everywhere

image::fuse/integration_everywhere.png[]

// ************* ENVIRONMENT CHANGED ************
[data-background="images/wjax_bgrd2.png"]
== "Environment" changed

[cols="30,70"]
|===
| .2+| image:fuse/distributed-environment-before.png[width="95%"]
a| +++&nbsp;<i class="fa fa-arrow-right"></i>&nbsp;+++ Infrastructure is a mix :

* Local, Remote,
* Virtual Machines,
* Iaas/Paas
* *xPaas* |
|===

// ************* ENVIRONMENT CHANGED ************
[data-background="images/wjax_bgrd2.png"]
== How to +++&nbsp;<i class="fa fa-question"></i>&nbsp;+++

[cols="30,70"]
|===
| .2+| image:fuse/distributed-environment-after.png[width="90%"]
a|
[.fragment]
Manage IP/Hostname

[.fragment]
Handle Configurations, Access Rights |
|===

// ************* DIFFERENT CONTAINERS ************
[data-background="images/wjax_bgrd2.png"]
== Multiple containers

[cols="40,60"]
|===
| .2+|image:fuse/several-containers-before.png[width="95%"]
a| * Manage different containers
   ** Karaf/Fuse OSGI
   ** Web / JavaEE
   ** Java Standalone
   ** Docker ... |
|===

// ************* DIFFERENT CONTAINERS ************
[data-background="images/wjax_bgrd2.png"]
== How To +++&nbsp;<i class="fa fa-question"></i>&nbsp;+++

[cols="40,60"]
|===
| .2+|image:fuse/several-containers-after.png[width="90%"]
a|
[.fragment]
* Package, provision & deploy in different container types,

[.fragment]
* Manage my JVMs

[.fragment]
* Collect metrics, statistics

[.fragment]
* Parallelize jobs/works/... |
|===


// ************* ABOUT OS FABRIC8 PLATFORM **************
[data-background="images/wjax_bgrd2.png"]
== What is fabric8 +++&nbsp;<i class="fa fa-question"></i>&nbsp;+++

* fabric8 is an open-source integration platform for deep management of Java Containers (JVMs).
* fabric8 makes it really easy to provision, automate, configure, and manage from a central location with a consistent UI and UX.
* It also gives you non-functional requirements like configuration management, service discovery failover, load balancing, centralized monitoring, automation, and more!

image::fabric/fabric-diagram1.png[]

// ************ FABRIC 8 ARCHITECTURE **************
[data-background="images/wjax_bgrd2.png"]
== Architecture +++&nbsp;<i class="fa fa-cloud"></i>&nbsp;+++

* *Rely on* +++&nbsp;<i class="fa fa-arrow-right"></i>&nbsp;+++
Zookeeper server (ensemble of 1,3, 5 or servers)
* *Coordinating distributed* systems in a *reliable* way (electing leaders, implementing master/slave, sharding or federation of services).

image:fuse/fabric-1.png[]

// ************** AGENT ************
[data-background="images/wjax_bgrd2.png"]
== Fabric Agent

* *clients* communicating with Zookeeper server(s)

image:fuse/fabric-2.png[]

* +++&nbsp;<i class="fa fa-arrow-right"></i>&nbsp;+++ register container info (ports, services, endpoints, processes)

* +++&nbsp;<i class="fa fa-arrow-right"></i>&nbsp;+++ get their provisioning

// ************** Fabric ************
[data-background="images/wjax_bgrd2.png"]
== Profiles
* *Envelope(s)* containing *artifacts* to be deployed, *parameters* (system, jvm, services) to be configured
* Can be *versioned*, facilitate migration - rollback

image::fuse/fabric-5.png[width="80%",height="80%"]

// ************** DEMO 1 **************
[data-background="images/wjax_bgrd2.png"]
== REST to Fabric

* DEMO
* Create a simple Camel project within JBDS, externalize some properties, build it and provision it into a new Fuse Managed Container (using JBoss Fuse GA).
* Present Fuse Management Container and some Plugins like Camel ,logs, ...

// ************** LOADBALANCING **************
[data-background="images/wjax_bgrd2.png"]
== Loadbalancing of services (Camel), Virtualisation & Workload distribution

* DEMO
* Deploy the first example/demo into a second Fuse Managed container and loadbalance requests using the Fabric registry and Fabric Camel Component (10 minutes)

// ************** DEMO 3 ************
[data-background="images/wjax_bgrd2.png"]
== Workload distribution (AMQ Gateway)

* DEMO

// ************** WHAT REDHAT PROPOSES *************
[data-background="images/wjax_bgrd2.png"]
== What RedHat proposes
text text

// *************ROADMAP & FUTURE **************
[data-background="images/wjax_bgrd2.png"]
== Roadmap
text text

// ************* QUESTIONS **********
== Questions

[cols="35,.<65"]
|===

.2+|image:questions.png[width="95%"]
a|* Twitter : http://twitter.com/cmoulliard[@cmoulliard]
a|* More info : http://camel.apache.org[Apache Camel], fabric8.io[Fabric8], http://fabric8.io[fabric8]
|===

